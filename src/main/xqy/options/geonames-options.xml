<options xmlns="http://marklogic.com/appservices/search">
	<concurrency-level>8</concurrency-level>
	<debug>0</debug>
	<page-length>10</page-length>
	<search-option>score-logtfidf</search-option>
	<quality-weight>1.0</quality-weight>
	<return-aggregates>true</return-aggregates>
	<return-constraints>false</return-constraints>
	<return-facets>true</return-facets>
	<return-frequencies>true</return-frequencies>
	<return-qtext>true</return-qtext>
	<return-query>false</return-query>
	<return-results>true</return-results>
	<return-metrics>true</return-metrics>
	<return-similar>false</return-similar>
	<return-values>true</return-values>
	<transform-results apply="snippet">
		<per-match-tokens>30</per-match-tokens>
		<max-matches>4</max-matches>
		<max-snippet-chars>200</max-snippet-chars>
		<preferred-elements>
		</preferred-elements>
	</transform-results>
	<searchable-expression>fn:collection()</searchable-expression>
	<sort-order direction="descending">
		<score />
	</sort-order>
	<term apply="term">
		<empty apply="all-results" />
	</term>
	<grammar>
		<quotation>"</quotation>
		<implicit>
			<cts:and-query xmlns:cts="http://marklogic.com/cts" strength="20">
			</cts:and-query>
		</implicit>
		<starter strength="30" apply="grouping" delimiter=")">(</starter>
		<starter strength="40" apply="prefix" element="cts:not-query">-</starter>
		<joiner strength="10" apply="infix" element="cts:or-query" tokenize="word">OR</joiner>
		<joiner strength="20" apply="infix" element="cts:and-query" tokenize="word">AND</joiner>
		<joiner strength="30" apply="infix" element="cts:near-query" tokenize="word">NEAR</joiner>
		<joiner strength="30" apply="near2" consume="2" element="cts:near-query">NEAR/</joiner>
		<joiner strength="32" apply="boost" element="cts:boost-query" tokenize="word">BOOST</joiner>
		<joiner strength="35" apply="not-in" element="cts:not-in-query" tokenize="word">NOT_IN</joiner>
		<joiner strength="50" apply="constraint">:</joiner>
		<joiner strength="50" apply="constraint" compare="LT" tokenize="word">LT</joiner>
		<joiner strength="50" apply="constraint" compare="LE" tokenize="word">LE</joiner>
		<joiner strength="50" apply="constraint" compare="GT" tokenize="word">GT</joiner>
		<joiner strength="50" apply="constraint" compare="GE" tokenize="word">GE</joiner>
		<joiner strength="50" apply="constraint" compare="NE" tokenize="word">NE</joiner>
	</grammar>
</options>
